{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","c","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","elem","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","img","key","GiftExpertApp","defaultCategories","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACbC,mBAAS,IADI,mBAC1CC,EAD0C,KAC9BC,EAD8B,KAgBjD,OACC,0BAAMC,SAVc,SAACC,GACrBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAACS,GAAD,OAAQP,GAAR,mBAAuBO,OACrCN,EAAc,OAMd,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAfd,SAACP,GAC1BF,EAAcE,EAAEQ,OAAOF,Y,uBCPZG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEhBC,EAFgB,iDAEgCC,UAAUH,GAF1C,+DAIJI,MAAMF,GAJF,cAIhBG,EAJgB,gBAKCA,EAAIC,OALL,uBAKdC,EALc,EAKdA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GACtB,MAAO,CACNC,GAAID,EAAKC,GACTC,MAAOF,EAAKE,MACZV,IAAKQ,EAAKG,OAAOC,iBAAiBZ,QAXd,kBAefM,GAfe,4CAAH,sDCGPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACxC,OACC,yBAAKc,UAAU,8DACd,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCFMO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACfd,mBAAS,CAClCqB,KAAM,GACNa,SAAS,IAH+B,mBAClCC,EADkC,KAC3BC,EAD2B,KAiBzC,OAXAC,qBAAU,WAETxB,EAAQC,GACPwB,MAAK,SAACC,GAAD,OACLH,EAAS,CACRf,KAAMkB,EACNL,SAAS,SAGT,CAACpB,IAEGqB,EDd2BK,CAAa1B,GAAjCa,EAD0B,EAChCN,KAAca,EADkB,EAClBA,QAEtB,OACC,oCACC,wBAAIJ,UAAU,qCAAqChB,GACnD,yBAAKgB,UAAU,aAGbI,GAAW,uBAAGJ,UAAU,oCAAb,cAGXH,EAAOJ,KAAI,SAACkB,GAAD,OACV,kBAAC,EAAD,iBAAiBA,EAAjB,CAAsBC,IAAKD,EAAIhB,YEGtBkB,EAjBO,SAAC,GAAgC,IAAD,IAA7BC,yBAA6B,MAAT,GAAS,IACjB5C,mBAAS4C,GADQ,mBAC9CC,EAD8C,KAClC9C,EADkC,KAGrD,OACC,oCACC,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BACE8C,EAAWtB,KAAI,SAACT,GAAD,OACf,kBAAC,EAAD,CAAS4B,IAAK5B,EAAUA,SAAUA,UCRvCgC,IAASC,OAAO,kBAAC,EAAD,MAAmBC,SAASC,eAAe,U","file":"static/js/main.e0de6062.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\r\n\tconst handleInputChange = (e) => {\r\n\t\tsetInputValue(e.target.value);\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (inputValue.trim().length > 2) {\r\n\t\t\tsetCategories((c) => [inputValue, ...c]);\r\n\t\t\tsetInputValue('');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nAddCategory.propTypes = {\r\n\tsetCategories: PropTypes.func.isRequired,\r\n};\r\n","export const getGifs = async (category) => {\r\n\t// prettier-ignore\r\n\tconst url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=xUtStorPxQwSsemT6W3St9EER3NJpOe0`;\r\n\r\n\tconst res = await fetch(url);\r\n\tconst { data } = await res.json();\r\n\r\n\tconst gifs = data.map((elem) => {\r\n\t\treturn {\r\n\t\t\tid: elem.id,\r\n\t\t\ttitle: elem.title,\r\n\t\t\turl: elem.images.downsized_medium.url,\r\n\t\t};\r\n\t});\r\n\r\n\treturn gifs;\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n\treturn (\r\n\t\t<div className=\"card animate__animated animate__fadeIn animate__fast 800ms\">\r\n\t\t\t<img src={url} alt={title}></img>\r\n\t\t\t<p>{title}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nGifGridItem.propTypes = {\r\n\turl: PropTypes.string.isRequired,\r\n\ttitle: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\tconst { data: images, loading } = useFetchGifs(category);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\t\t\t<div className=\"card-grid\">\r\n\t\t\t\t{/* este simbolo && significa que si está cargando, ponga un párrago que diga loading\r\n\t\t\t\tSi no está cargando, no hace nada */}\r\n\t\t\t\t{loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n\t\t\t\t{\r\n\t\t\t\t\t// prettier/ignore\r\n\t\t\t\t\timages.map((img) => (\r\n\t\t\t\t\t\t<GifGridItem {...img} key={img.id} />\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nGifGrid.propTypes = {\r\n\tcategory : PropTypes.string.isRequired,\r\n}","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\tconst [state, setState] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true,\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\t//prettier-ignore\r\n\t\tgetGifs(category)\r\n\t\t.then((imgs) =>\r\n\t\t\tsetState({\r\n\t\t\t\tdata: imgs,\r\n\t\t\t\tloading: false,\r\n\t\t\t})\r\n\t\t);\r\n\t}, [category]);\r\n\r\n\treturn state; // {data: [], loading: true}\r\n};\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GiftExpertApp = ({ defaultCategories = [] }) => {\r\n\tconst [categories, setCategories] = useState(defaultCategories);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>GifExpertApp</h2>\r\n\t\t\t<AddCategory setCategories={setCategories} />\r\n\t\t\t<hr />\r\n\t\t\t<ol>\r\n\t\t\t\t{categories.map((category) => (\r\n\t\t\t\t\t<GifGrid key={category} category={category} />\r\n\t\t\t\t))}\r\n\t\t\t</ol>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default GiftExpertApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport GiftExpertApp from \"./GiftExpertApp\";\n\nReactDOM.render(<GiftExpertApp />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}